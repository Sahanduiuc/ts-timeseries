{"name":"ts-timeseries","tagline":"Dealing with (financial) time series data","body":"## Motivation\r\nWe provide tools to work with time series data in Java.\r\n\r\n## Data import from external sources\r\nProgram tools against this interface to load data into the ts-cta framework:\r\n\r\n```java\r\npublic interface InputData {\r\n    /**\r\n     * read time series\r\n     *\r\n     * @param name name of the time series\r\n     * @return the time series\r\n     */\r\n    TimeSeries timeSeries(String name);\r\n\r\n    /**\r\n     * read set of names\r\n     *\r\n     * @return Set of all feasible names\r\n     */\r\n    Set<String> names();\r\n}\r\n\r\npublic interface TimeSeries\r\n{\r\n    /**\r\n     * @return Map of values at certain time stamps.\r\n     *\r\n     * Time stamp are Java time stamps in ms.\r\n     */\r\n    SortedMap<Long, Double> points();\r\n}\r\n\r\n```\r\n\r\nWe provide such implementations for hdf and csv files\r\n\r\n## Matlab support\r\nMatlab is dubious with dates. We provide some help in the Matlab package.\r\n\r\n## Matrices\r\nTime series data are the columns of a matrix\r\n\r\n```java\r\npackage com.ts.timeseries.matrix;\r\n\r\nimport com.ts.timeseries.data.TimeSeries;\r\n\r\n...\r\n\r\n/**\r\n * Matrix interface\r\n */\r\npublic interface Matrix {\r\n    /**\r\n     * Read a scalar\r\n     */\r\n    double readScalar(String name, Long time);\r\n\r\n    /**\r\n     * Write a scalar\r\n     */\r\n    void writeScalar(String name, Long time, double scalar);\r\n\r\n    /**\r\n     * Read a vector\r\n     */\r\n    SortedMap<String, Double> readVector(Long time);\r\n\r\n    /**\r\n     * Write a vector\r\n     *\r\n     * @param data the vector\r\n     */\r\n    void writeVector(Long time, Map<String, Double> data);\r\n\r\n    /**\r\n     * @return set of columnNames\r\n     */\r\n    Set<String> columns();\r\n\r\n    /**\r\n     * set a column in matrix\r\n     *\r\n     * @param columnName name of the column\r\n     * @param timeSeries time series in the column\r\n     */\r\n    void setTimeSeries(String columnName, TimeSeries timeSeries);\r\n\r\n    /**\r\n     * get a column in matrix\r\n     *\r\n     * @param columnName name of the column\r\n     * @return time series in column\r\n     */\r\n    TimeSeries getTimeSeries(String columnName);\r\n\r\n    /**\r\n     * time grid used by matrix\r\n     *\r\n     * @return time grid\r\n     */\r\n    SortedSet<Long> timegrid();\r\n\r\n    /**\r\n     * write matrix to hdf file, use \"data\" as a group\r\n     *\r\n     * @param file file\r\n     */\r\n    void to_hdf(File file);\r\n}\r\n```\r\n\r\n## Operators\r\nWe provide various functions to map and analyze time series data and matrices.\r\n\r\n## Availability\r\nThis package is available in the Maven repository of the author.\r\n\r\n\r\n   \r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}